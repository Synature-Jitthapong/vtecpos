package com.vtec.j1tth4.vtecpos.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.vtec.j1tth4.vtecpos.dao.OrderDetailfront;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table ORDER_DETAILFRONT.
*/
public class OrderDetailfrontDao extends AbstractDao<OrderDetailfront, Void> {

    public static final String TABLENAME = "ORDER_DETAILFRONT";

    /**
     * Properties of entity OrderDetailfront.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
    };


    public OrderDetailfrontDao(DaoConfig config) {
        super(config);
    }
    
    public OrderDetailfrontDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'ORDER_DETAILFRONT' (" + //
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'ORDER_DETAILFRONT'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, OrderDetailfront entity) {
        stmt.clearBindings();
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public OrderDetailfront readEntity(Cursor cursor, int offset) {
        OrderDetailfront entity = new OrderDetailfront( //
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, OrderDetailfront entity, int offset) {
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(OrderDetailfront entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(OrderDetailfront entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
