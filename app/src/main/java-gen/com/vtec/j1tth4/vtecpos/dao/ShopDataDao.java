package com.vtec.j1tth4.vtecpos.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.vtec.j1tth4.vtecpos.dao.ShopData;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table ShopData.
*/
public class ShopDataDao extends AbstractDao<ShopData, Integer> {

    public static final String TABLENAME = "ShopData";

    /**
     * Properties of entity ShopData.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property ShopID = new Property(0, Integer.class, "ShopID", true, "ShopID");
        public final static Property ShopCode = new Property(1, String.class, "ShopCode", false, "ShopCode");
        public final static Property ShopName = new Property(2, String.class, "ShopName", false, "ShopName");
        public final static Property IsShop = new Property(3, Integer.class, "IsShop", false, "IsShop");
        public final static Property IsInv = new Property(4, Integer.class, "IsInv", false, "IsInv");
        public final static Property HasSC = new Property(5, Integer.class, "HasSC", false, "HasSC");
        public final static Property IsSCBeforeDisc = new Property(6, Integer.class, "IsSCBeforeDisc", false, "IsSCBeforeDisc");
        public final static Property SCPercent = new Property(7, Double.class, "SCPercent", false, "SCPercent");
        public final static Property VATCode = new Property(8, String.class, "VATCode", false, "VATCode");
        public final static Property VATType = new Property(9, Integer.class, "VATType", false, "VATType");
        public final static Property MasterShop = new Property(10, Integer.class, "MasterShop", false, "MasterShop");
        public final static Property MasterShopLink = new Property(11, Integer.class, "MasterShopLink", false, "MasterShopLink");
        public final static Property ShowInReport = new Property(12, Integer.class, "ShowInReport", false, "ShowInReport");
        public final static Property ShopTypeID = new Property(13, Integer.class, "ShopTypeID", false, "ShopTypeID");
        public final static Property ShopCatID1 = new Property(14, Integer.class, "ShopCatID1", false, "ShopCatID1");
        public final static Property ShopCatID2 = new Property(15, Integer.class, "ShopCatID2", false, "ShopCatID2");
        public final static Property ShopCatID3 = new Property(16, Integer.class, "ShopCatID3", false, "ShopCatID3");
        public final static Property ShopCatID4 = new Property(17, Integer.class, "ShopCatID4", false, "ShopCatID4");
        public final static Property ShopCatID5 = new Property(18, Integer.class, "ShopCatID5", false, "ShopCatID5");
        public final static Property ShopCatID6 = new Property(19, Integer.class, "ShopCatID6", false, "ShopCatID6");
        public final static Property ShopCatID7 = new Property(20, Integer.class, "ShopCatID7", false, "ShopCatID7");
        public final static Property ShopCatID8 = new Property(21, Integer.class, "ShopCatID8", false, "ShopCatID8");
        public final static Property ShopCatID9 = new Property(22, Integer.class, "ShopCatID9", false, "ShopCatID9");
        public final static Property ShopCatID10 = new Property(23, Integer.class, "ShopCatID10", false, "ShopCatID10");
        public final static Property OpenHour = new Property(24, java.util.Date.class, "OpenHour", false, "OpenHour");
        public final static Property CloseHour = new Property(25, java.util.Date.class, "CloseHour", false, "CloseHour");
        public final static Property CompanyName = new Property(26, String.class, "CompanyName", false, "CompanyName");
        public final static Property CompanyAddress1 = new Property(27, String.class, "CompanyAddress1", false, "CompanyAddress1");
        public final static Property CompanyAddress2 = new Property(28, String.class, "CompanyAddress2", false, "CompanyAddress2");
        public final static Property CompanyCity = new Property(29, String.class, "CompanyCity", false, "CompanyCity");
        public final static Property CompanyProvince = new Property(30, Integer.class, "CompanyProvince", false, "CompanyProvince");
        public final static Property DisplayCompanyProvinceLangID = new Property(31, Integer.class, "DisplayCompanyProvinceLangID", false, "DisplayCompanyProvinceLangID");
        public final static Property CompanyZipCode = new Property(32, String.class, "CompanyZipCode", false, "CompanyZipCode");
        public final static Property CompanyTelephone = new Property(33, String.class, "CompanyTelephone", false, "CompanyTelephone");
        public final static Property CompanyFax = new Property(34, String.class, "CompanyFax", false, "CompanyFax");
        public final static Property CompanyCountry = new Property(35, String.class, "CompanyCountry", false, "CompanyCountry");
        public final static Property CompanyTaxID = new Property(36, String.class, "CompanyTaxID", false, "CompanyTaxID");
        public final static Property CompanyRegisterID = new Property(37, String.class, "CompanyRegisterID", false, "CompanyRegisterID");
        public final static Property AccountingCode = new Property(38, String.class, "AccountingCode", false, "AccountingCode");
        public final static Property DeliveryName = new Property(39, String.class, "DeliveryName", false, "DeliveryName");
        public final static Property DeliveryAddress1 = new Property(40, String.class, "DeliveryAddress1", false, "DeliveryAddress1");
        public final static Property DeliveryAddress2 = new Property(41, String.class, "DeliveryAddress2", false, "DeliveryAddress2");
        public final static Property DeliveryCity = new Property(42, String.class, "DeliveryCity", false, "DeliveryCity");
        public final static Property DeliveryProvince = new Property(43, Integer.class, "DeliveryProvince", false, "DeliveryProvince");
        public final static Property DeliveryZipCode = new Property(44, String.class, "DeliveryZipCode", false, "DeliveryZipCode");
        public final static Property DeliveryTelephone = new Property(45, String.class, "DeliveryTelephone", false, "DeliveryTelephone");
        public final static Property DeliveryFax = new Property(46, String.class, "DeliveryFax", false, "DeliveryFax");
        public final static Property IPAddress = new Property(47, String.class, "IPAddress", false, "IPAddress");
        public final static Property Addtional = new Property(48, String.class, "Addtional", false, "Addtional");
        public final static Property ProductLevelOrder = new Property(49, Integer.class, "ProductLevelOrder", false, "ProductLevelOrder");
        public final static Property Deleted = new Property(50, Integer.class, "Deleted", false, "Deleted");
    };


    public ShopDataDao(DaoConfig config) {
        super(config);
    }
    
    public ShopDataDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, ShopData entity) {
        stmt.clearBindings();
 
        Integer ShopID = entity.getShopID();
        if (ShopID != null) {
            stmt.bindLong(1, ShopID);
        }
 
        String ShopCode = entity.getShopCode();
        if (ShopCode != null) {
            stmt.bindString(2, ShopCode);
        }
 
        String ShopName = entity.getShopName();
        if (ShopName != null) {
            stmt.bindString(3, ShopName);
        }
 
        Integer IsShop = entity.getIsShop();
        if (IsShop != null) {
            stmt.bindLong(4, IsShop);
        }
 
        Integer IsInv = entity.getIsInv();
        if (IsInv != null) {
            stmt.bindLong(5, IsInv);
        }
 
        Integer HasSC = entity.getHasSC();
        if (HasSC != null) {
            stmt.bindLong(6, HasSC);
        }
 
        Integer IsSCBeforeDisc = entity.getIsSCBeforeDisc();
        if (IsSCBeforeDisc != null) {
            stmt.bindLong(7, IsSCBeforeDisc);
        }
 
        Double SCPercent = entity.getSCPercent();
        if (SCPercent != null) {
            stmt.bindDouble(8, SCPercent);
        }
 
        String VATCode = entity.getVATCode();
        if (VATCode != null) {
            stmt.bindString(9, VATCode);
        }
 
        Integer VATType = entity.getVATType();
        if (VATType != null) {
            stmt.bindLong(10, VATType);
        }
 
        Integer MasterShop = entity.getMasterShop();
        if (MasterShop != null) {
            stmt.bindLong(11, MasterShop);
        }
 
        Integer MasterShopLink = entity.getMasterShopLink();
        if (MasterShopLink != null) {
            stmt.bindLong(12, MasterShopLink);
        }
 
        Integer ShowInReport = entity.getShowInReport();
        if (ShowInReport != null) {
            stmt.bindLong(13, ShowInReport);
        }
 
        Integer ShopTypeID = entity.getShopTypeID();
        if (ShopTypeID != null) {
            stmt.bindLong(14, ShopTypeID);
        }
 
        Integer ShopCatID1 = entity.getShopCatID1();
        if (ShopCatID1 != null) {
            stmt.bindLong(15, ShopCatID1);
        }
 
        Integer ShopCatID2 = entity.getShopCatID2();
        if (ShopCatID2 != null) {
            stmt.bindLong(16, ShopCatID2);
        }
 
        Integer ShopCatID3 = entity.getShopCatID3();
        if (ShopCatID3 != null) {
            stmt.bindLong(17, ShopCatID3);
        }
 
        Integer ShopCatID4 = entity.getShopCatID4();
        if (ShopCatID4 != null) {
            stmt.bindLong(18, ShopCatID4);
        }
 
        Integer ShopCatID5 = entity.getShopCatID5();
        if (ShopCatID5 != null) {
            stmt.bindLong(19, ShopCatID5);
        }
 
        Integer ShopCatID6 = entity.getShopCatID6();
        if (ShopCatID6 != null) {
            stmt.bindLong(20, ShopCatID6);
        }
 
        Integer ShopCatID7 = entity.getShopCatID7();
        if (ShopCatID7 != null) {
            stmt.bindLong(21, ShopCatID7);
        }
 
        Integer ShopCatID8 = entity.getShopCatID8();
        if (ShopCatID8 != null) {
            stmt.bindLong(22, ShopCatID8);
        }
 
        Integer ShopCatID9 = entity.getShopCatID9();
        if (ShopCatID9 != null) {
            stmt.bindLong(23, ShopCatID9);
        }
 
        Integer ShopCatID10 = entity.getShopCatID10();
        if (ShopCatID10 != null) {
            stmt.bindLong(24, ShopCatID10);
        }
 
        java.util.Date OpenHour = entity.getOpenHour();
        if (OpenHour != null) {
            stmt.bindLong(25, OpenHour.getTime());
        }
 
        java.util.Date CloseHour = entity.getCloseHour();
        if (CloseHour != null) {
            stmt.bindLong(26, CloseHour.getTime());
        }
 
        String CompanyName = entity.getCompanyName();
        if (CompanyName != null) {
            stmt.bindString(27, CompanyName);
        }
 
        String CompanyAddress1 = entity.getCompanyAddress1();
        if (CompanyAddress1 != null) {
            stmt.bindString(28, CompanyAddress1);
        }
 
        String CompanyAddress2 = entity.getCompanyAddress2();
        if (CompanyAddress2 != null) {
            stmt.bindString(29, CompanyAddress2);
        }
 
        String CompanyCity = entity.getCompanyCity();
        if (CompanyCity != null) {
            stmt.bindString(30, CompanyCity);
        }
 
        Integer CompanyProvince = entity.getCompanyProvince();
        if (CompanyProvince != null) {
            stmt.bindLong(31, CompanyProvince);
        }
 
        Integer DisplayCompanyProvinceLangID = entity.getDisplayCompanyProvinceLangID();
        if (DisplayCompanyProvinceLangID != null) {
            stmt.bindLong(32, DisplayCompanyProvinceLangID);
        }
 
        String CompanyZipCode = entity.getCompanyZipCode();
        if (CompanyZipCode != null) {
            stmt.bindString(33, CompanyZipCode);
        }
 
        String CompanyTelephone = entity.getCompanyTelephone();
        if (CompanyTelephone != null) {
            stmt.bindString(34, CompanyTelephone);
        }
 
        String CompanyFax = entity.getCompanyFax();
        if (CompanyFax != null) {
            stmt.bindString(35, CompanyFax);
        }
 
        String CompanyCountry = entity.getCompanyCountry();
        if (CompanyCountry != null) {
            stmt.bindString(36, CompanyCountry);
        }
 
        String CompanyTaxID = entity.getCompanyTaxID();
        if (CompanyTaxID != null) {
            stmt.bindString(37, CompanyTaxID);
        }
 
        String CompanyRegisterID = entity.getCompanyRegisterID();
        if (CompanyRegisterID != null) {
            stmt.bindString(38, CompanyRegisterID);
        }
 
        String AccountingCode = entity.getAccountingCode();
        if (AccountingCode != null) {
            stmt.bindString(39, AccountingCode);
        }
 
        String DeliveryName = entity.getDeliveryName();
        if (DeliveryName != null) {
            stmt.bindString(40, DeliveryName);
        }
 
        String DeliveryAddress1 = entity.getDeliveryAddress1();
        if (DeliveryAddress1 != null) {
            stmt.bindString(41, DeliveryAddress1);
        }
 
        String DeliveryAddress2 = entity.getDeliveryAddress2();
        if (DeliveryAddress2 != null) {
            stmt.bindString(42, DeliveryAddress2);
        }
 
        String DeliveryCity = entity.getDeliveryCity();
        if (DeliveryCity != null) {
            stmt.bindString(43, DeliveryCity);
        }
 
        Integer DeliveryProvince = entity.getDeliveryProvince();
        if (DeliveryProvince != null) {
            stmt.bindLong(44, DeliveryProvince);
        }
 
        String DeliveryZipCode = entity.getDeliveryZipCode();
        if (DeliveryZipCode != null) {
            stmt.bindString(45, DeliveryZipCode);
        }
 
        String DeliveryTelephone = entity.getDeliveryTelephone();
        if (DeliveryTelephone != null) {
            stmt.bindString(46, DeliveryTelephone);
        }
 
        String DeliveryFax = entity.getDeliveryFax();
        if (DeliveryFax != null) {
            stmt.bindString(47, DeliveryFax);
        }
 
        String IPAddress = entity.getIPAddress();
        if (IPAddress != null) {
            stmt.bindString(48, IPAddress);
        }
 
        String Addtional = entity.getAddtional();
        if (Addtional != null) {
            stmt.bindString(49, Addtional);
        }
 
        Integer ProductLevelOrder = entity.getProductLevelOrder();
        if (ProductLevelOrder != null) {
            stmt.bindLong(50, ProductLevelOrder);
        }
 
        Integer Deleted = entity.getDeleted();
        if (Deleted != null) {
            stmt.bindLong(51, Deleted);
        }
    }

    /** @inheritdoc */
    @Override
    public Integer readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public ShopData readEntity(Cursor cursor, int offset) {
        ShopData entity = new ShopData( //
            cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0), // ShopID
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // ShopCode
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // ShopName
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // IsShop
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // IsInv
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // HasSC
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // IsSCBeforeDisc
            cursor.isNull(offset + 7) ? null : cursor.getDouble(offset + 7), // SCPercent
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // VATCode
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // VATType
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // MasterShop
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // MasterShopLink
            cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // ShowInReport
            cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13), // ShopTypeID
            cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14), // ShopCatID1
            cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15), // ShopCatID2
            cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16), // ShopCatID3
            cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17), // ShopCatID4
            cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18), // ShopCatID5
            cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19), // ShopCatID6
            cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20), // ShopCatID7
            cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21), // ShopCatID8
            cursor.isNull(offset + 22) ? null : cursor.getInt(offset + 22), // ShopCatID9
            cursor.isNull(offset + 23) ? null : cursor.getInt(offset + 23), // ShopCatID10
            cursor.isNull(offset + 24) ? null : new java.util.Date(cursor.getLong(offset + 24)), // OpenHour
            cursor.isNull(offset + 25) ? null : new java.util.Date(cursor.getLong(offset + 25)), // CloseHour
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // CompanyName
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // CompanyAddress1
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // CompanyAddress2
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // CompanyCity
            cursor.isNull(offset + 30) ? null : cursor.getInt(offset + 30), // CompanyProvince
            cursor.isNull(offset + 31) ? null : cursor.getInt(offset + 31), // DisplayCompanyProvinceLangID
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // CompanyZipCode
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // CompanyTelephone
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // CompanyFax
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // CompanyCountry
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // CompanyTaxID
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // CompanyRegisterID
            cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // AccountingCode
            cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // DeliveryName
            cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // DeliveryAddress1
            cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // DeliveryAddress2
            cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // DeliveryCity
            cursor.isNull(offset + 43) ? null : cursor.getInt(offset + 43), // DeliveryProvince
            cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44), // DeliveryZipCode
            cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45), // DeliveryTelephone
            cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46), // DeliveryFax
            cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47), // IPAddress
            cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48), // Addtional
            cursor.isNull(offset + 49) ? null : cursor.getInt(offset + 49), // ProductLevelOrder
            cursor.isNull(offset + 50) ? null : cursor.getInt(offset + 50) // Deleted
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, ShopData entity, int offset) {
        entity.setShopID(cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0));
        entity.setShopCode(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setShopName(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setIsShop(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setIsInv(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setHasSC(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setIsSCBeforeDisc(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setSCPercent(cursor.isNull(offset + 7) ? null : cursor.getDouble(offset + 7));
        entity.setVATCode(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setVATType(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setMasterShop(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setMasterShopLink(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setShowInReport(cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
        entity.setShopTypeID(cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13));
        entity.setShopCatID1(cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14));
        entity.setShopCatID2(cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15));
        entity.setShopCatID3(cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16));
        entity.setShopCatID4(cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17));
        entity.setShopCatID5(cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18));
        entity.setShopCatID6(cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19));
        entity.setShopCatID7(cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20));
        entity.setShopCatID8(cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21));
        entity.setShopCatID9(cursor.isNull(offset + 22) ? null : cursor.getInt(offset + 22));
        entity.setShopCatID10(cursor.isNull(offset + 23) ? null : cursor.getInt(offset + 23));
        entity.setOpenHour(cursor.isNull(offset + 24) ? null : new java.util.Date(cursor.getLong(offset + 24)));
        entity.setCloseHour(cursor.isNull(offset + 25) ? null : new java.util.Date(cursor.getLong(offset + 25)));
        entity.setCompanyName(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setCompanyAddress1(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setCompanyAddress2(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setCompanyCity(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setCompanyProvince(cursor.isNull(offset + 30) ? null : cursor.getInt(offset + 30));
        entity.setDisplayCompanyProvinceLangID(cursor.isNull(offset + 31) ? null : cursor.getInt(offset + 31));
        entity.setCompanyZipCode(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setCompanyTelephone(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setCompanyFax(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setCompanyCountry(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setCompanyTaxID(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setCompanyRegisterID(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setAccountingCode(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setDeliveryName(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setDeliveryAddress1(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setDeliveryAddress2(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setDeliveryCity(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setDeliveryProvince(cursor.isNull(offset + 43) ? null : cursor.getInt(offset + 43));
        entity.setDeliveryZipCode(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
        entity.setDeliveryTelephone(cursor.isNull(offset + 45) ? null : cursor.getString(offset + 45));
        entity.setDeliveryFax(cursor.isNull(offset + 46) ? null : cursor.getString(offset + 46));
        entity.setIPAddress(cursor.isNull(offset + 47) ? null : cursor.getString(offset + 47));
        entity.setAddtional(cursor.isNull(offset + 48) ? null : cursor.getString(offset + 48));
        entity.setProductLevelOrder(cursor.isNull(offset + 49) ? null : cursor.getInt(offset + 49));
        entity.setDeleted(cursor.isNull(offset + 50) ? null : cursor.getInt(offset + 50));
     }
    
    /** @inheritdoc */
    @Override
    protected Integer updateKeyAfterInsert(ShopData entity, long rowId) {
        return entity.getShopID();
    }
    
    /** @inheritdoc */
    @Override
    public Integer getKey(ShopData entity) {
        if(entity != null) {
            return entity.getShopID();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
