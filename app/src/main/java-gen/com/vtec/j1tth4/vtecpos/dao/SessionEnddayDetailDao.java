package com.vtec.j1tth4.vtecpos.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.vtec.j1tth4.vtecpos.dao.SessionEnddayDetail;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table SESSION_ENDDAY_DETAIL.
*/
public class SessionEnddayDetailDao extends AbstractDao<SessionEnddayDetail, java.util.Date> {

    public static final String TABLENAME = "SESSION_ENDDAY_DETAIL";

    /**
     * Properties of entity SessionEnddayDetail.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property SessionDate = new Property(0, java.util.Date.class, "SessionDate", true, "SESSION_DATE");
        public final static Property ShopID = new Property(1, int.class, "ShopID", false, "SHOP_ID");
        public final static Property IsEndDay = new Property(2, Integer.class, "IsEndDay", false, "IS_END_DAY");
        public final static Property EndDayStaffID = new Property(3, Integer.class, "EndDayStaffID", false, "END_DAY_STAFF_ID");
        public final static Property EndDayDateTime = new Property(4, java.util.Date.class, "EndDayDateTime", false, "END_DAY_DATE_TIME");
        public final static Property TotalReceipt = new Property(5, Integer.class, "TotalReceipt", false, "TOTAL_RECEIPT");
        public final static Property TotalPayPrice = new Property(6, Double.class, "TotalPayPrice", false, "TOTAL_PAY_PRICE");
        public final static Property EndDayComputerID = new Property(7, Integer.class, "EndDayComputerID", false, "END_DAY_COMPUTER_ID");
        public final static Property NoOfSync = new Property(8, Integer.class, "NoOfSync", false, "NO_OF_SYNC");
        public final static Property Remark = new Property(9, String.class, "Remark", false, "REMARK");
    };


    public SessionEnddayDetailDao(DaoConfig config) {
        super(config);
    }
    
    public SessionEnddayDetailDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, SessionEnddayDetail entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getSessionDate().getTime());
        stmt.bindLong(2, entity.getShopID());
 
        Integer IsEndDay = entity.getIsEndDay();
        if (IsEndDay != null) {
            stmt.bindLong(3, IsEndDay);
        }
 
        Integer EndDayStaffID = entity.getEndDayStaffID();
        if (EndDayStaffID != null) {
            stmt.bindLong(4, EndDayStaffID);
        }
 
        java.util.Date EndDayDateTime = entity.getEndDayDateTime();
        if (EndDayDateTime != null) {
            stmt.bindLong(5, EndDayDateTime.getTime());
        }
 
        Integer TotalReceipt = entity.getTotalReceipt();
        if (TotalReceipt != null) {
            stmt.bindLong(6, TotalReceipt);
        }
 
        Double TotalPayPrice = entity.getTotalPayPrice();
        if (TotalPayPrice != null) {
            stmt.bindDouble(7, TotalPayPrice);
        }
 
        Integer EndDayComputerID = entity.getEndDayComputerID();
        if (EndDayComputerID != null) {
            stmt.bindLong(8, EndDayComputerID);
        }
 
        Integer NoOfSync = entity.getNoOfSync();
        if (NoOfSync != null) {
            stmt.bindLong(9, NoOfSync);
        }
 
        String Remark = entity.getRemark();
        if (Remark != null) {
            stmt.bindString(10, Remark);
        }
    }

    /** @inheritdoc */
    @Override
    public java.util.Date readKey(Cursor cursor, int offset) {
        return new java.util.Date(cursor.getLong(offset + 0));
    }    

    /** @inheritdoc */
    @Override
    public SessionEnddayDetail readEntity(Cursor cursor, int offset) {
        SessionEnddayDetail entity = new SessionEnddayDetail( //
            new java.util.Date(cursor.getLong(offset + 0)), // SessionDate
            cursor.getInt(offset + 1), // ShopID
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // IsEndDay
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // EndDayStaffID
            cursor.isNull(offset + 4) ? null : new java.util.Date(cursor.getLong(offset + 4)), // EndDayDateTime
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // TotalReceipt
            cursor.isNull(offset + 6) ? null : cursor.getDouble(offset + 6), // TotalPayPrice
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // EndDayComputerID
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // NoOfSync
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9) // Remark
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, SessionEnddayDetail entity, int offset) {
        entity.setSessionDate(new java.util.Date(cursor.getLong(offset + 0)));
        entity.setShopID(cursor.getInt(offset + 1));
        entity.setIsEndDay(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setEndDayStaffID(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setEndDayDateTime(cursor.isNull(offset + 4) ? null : new java.util.Date(cursor.getLong(offset + 4)));
        entity.setTotalReceipt(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setTotalPayPrice(cursor.isNull(offset + 6) ? null : cursor.getDouble(offset + 6));
        entity.setEndDayComputerID(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setNoOfSync(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setRemark(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
     }
    
    /** @inheritdoc */
    @Override
    protected java.util.Date updateKeyAfterInsert(SessionEnddayDetail entity, long rowId) {
        return entity.getSessionDate();
    }
    
    /** @inheritdoc */
    @Override
    public java.util.Date getKey(SessionEnddayDetail entity) {
        if(entity != null) {
            return entity.getSessionDate();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
