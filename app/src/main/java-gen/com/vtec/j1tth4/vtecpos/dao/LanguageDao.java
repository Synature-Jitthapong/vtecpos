package com.vtec.j1tth4.vtecpos.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.vtec.j1tth4.vtecpos.dao.Language;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table Language.
*/
public class LanguageDao extends AbstractDao<Language, Integer> {

    public static final String TABLENAME = "Language";

    /**
     * Properties of entity Language.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property LangID = new Property(0, Integer.class, "LangID", true, "LangID");
        public final static Property LangName = new Property(1, String.class, "LangName", false, "LangName");
        public final static Property LangCode = new Property(2, String.class, "LangCode", false, "LangCode");
        public final static Property LangFileLetter = new Property(3, String.class, "LangFileLetter", false, "LangFileLetter");
        public final static Property LangCultureString = new Property(4, String.class, "LangCultureString", false, "LangCultureString");
        public final static Property IsAvailable = new Property(5, Integer.class, "IsAvailable", false, "IsAvailable");
    };


    public LanguageDao(DaoConfig config) {
        super(config);
    }
    
    public LanguageDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, Language entity) {
        stmt.clearBindings();
 
        Integer LangID = entity.getLangID();
        if (LangID != null) {
            stmt.bindLong(1, LangID);
        }
 
        String LangName = entity.getLangName();
        if (LangName != null) {
            stmt.bindString(2, LangName);
        }
 
        String LangCode = entity.getLangCode();
        if (LangCode != null) {
            stmt.bindString(3, LangCode);
        }
 
        String LangFileLetter = entity.getLangFileLetter();
        if (LangFileLetter != null) {
            stmt.bindString(4, LangFileLetter);
        }
 
        String LangCultureString = entity.getLangCultureString();
        if (LangCultureString != null) {
            stmt.bindString(5, LangCultureString);
        }
 
        Integer IsAvailable = entity.getIsAvailable();
        if (IsAvailable != null) {
            stmt.bindLong(6, IsAvailable);
        }
    }

    /** @inheritdoc */
    @Override
    public Integer readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public Language readEntity(Cursor cursor, int offset) {
        Language entity = new Language( //
            cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0), // LangID
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // LangName
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // LangCode
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // LangFileLetter
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // LangCultureString
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5) // IsAvailable
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, Language entity, int offset) {
        entity.setLangID(cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0));
        entity.setLangName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setLangCode(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setLangFileLetter(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setLangCultureString(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setIsAvailable(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
     }
    
    /** @inheritdoc */
    @Override
    protected Integer updateKeyAfterInsert(Language entity, long rowId) {
        return entity.getLangID();
    }
    
    /** @inheritdoc */
    @Override
    public Integer getKey(Language entity) {
        if(entity != null) {
            return entity.getLangID();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
