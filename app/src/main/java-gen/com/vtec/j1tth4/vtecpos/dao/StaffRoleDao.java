package com.vtec.j1tth4.vtecpos.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.vtec.j1tth4.vtecpos.dao.StaffRole;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table STAFF_ROLE.
*/
public class StaffRoleDao extends AbstractDao<StaffRole, Integer> {

    public static final String TABLENAME = "STAFF_ROLE";

    /**
     * Properties of entity StaffRole.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property StaffRoleID = new Property(0, int.class, "StaffRoleID", true, "STAFF_ROLE_ID");
        public final static Property StaffRoleLevel = new Property(1, Integer.class, "StaffRoleLevel", false, "STAFF_ROLE_LEVEL");
        public final static Property StaffRoleName = new Property(2, String.class, "StaffRoleName", false, "STAFF_ROLE_NAME");
        public final static Property Deleted = new Property(3, Integer.class, "Deleted", false, "DELETED");
        public final static Property AddingFromBranch = new Property(4, Integer.class, "AddingFromBranch", false, "ADDING_FROM_BRANCH");
    };


    public StaffRoleDao(DaoConfig config) {
        super(config);
    }
    
    public StaffRoleDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, StaffRole entity) {
        stmt.clearBindings();
        stmt.bindLong(1, entity.getStaffRoleID());
 
        Integer StaffRoleLevel = entity.getStaffRoleLevel();
        if (StaffRoleLevel != null) {
            stmt.bindLong(2, StaffRoleLevel);
        }
 
        String StaffRoleName = entity.getStaffRoleName();
        if (StaffRoleName != null) {
            stmt.bindString(3, StaffRoleName);
        }
 
        Integer Deleted = entity.getDeleted();
        if (Deleted != null) {
            stmt.bindLong(4, Deleted);
        }
 
        Integer AddingFromBranch = entity.getAddingFromBranch();
        if (AddingFromBranch != null) {
            stmt.bindLong(5, AddingFromBranch);
        }
    }

    /** @inheritdoc */
    @Override
    public Integer readKey(Cursor cursor, int offset) {
        return cursor.getInt(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public StaffRole readEntity(Cursor cursor, int offset) {
        StaffRole entity = new StaffRole( //
            cursor.getInt(offset + 0), // StaffRoleID
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // StaffRoleLevel
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // StaffRoleName
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // Deleted
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4) // AddingFromBranch
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, StaffRole entity, int offset) {
        entity.setStaffRoleID(cursor.getInt(offset + 0));
        entity.setStaffRoleLevel(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setStaffRoleName(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setDeleted(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setAddingFromBranch(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected Integer updateKeyAfterInsert(StaffRole entity, long rowId) {
        return entity.getStaffRoleID();
    }
    
    /** @inheritdoc */
    @Override
    public Integer getKey(StaffRole entity) {
        if(entity != null) {
            return entity.getStaffRoleID();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
